version: 2.1

executors:
  default-executor:
    docker:
      - image: cimg/ruby:3.3.6-node
    working_directory: ~/shared-actions

  docker-publisher:
    environment:
      IMAGE_NAME: jira-pr-updater-action
    docker:
      - image: docker:20.10.14-git

orbs:
  ruby: circleci/ruby@2.1.1

jobs:
  setup:
    executor: default-executor
    steps:
      - checkout
      - restore_cache:
          keys:
            - npm-dependencies-{{ checksum "package-lock.json" }}
            - npm-dependencies-
            - ruby-gems-{{ checksum "Gemfile.lock" }}
            - ruby-gems-
      - run:
          name: Install Node.js Dependencies
          command: npm ci
      - save_cache:
          paths:
           - ~/.npm
          key: npm-dependencies-{{ checksum "package-lock.json" }}
      - run:
          name: Install Correct Bundler Version
          command: |
            gem install bundler:"$(grep -A 1 "BUNDLED WITH" Gemfile.lock | tail -n 1)"
      - run:
          name: Install Ruby Tools
          command: bundle install

      - save_cache:
          paths:
            - ~/.bundle
          key: ruby-gems-{{ checksum "Gemfile.lock" }}
      - run:
          name: Debug Cache Restoration
          command: |
            ls -la ~/.npm || echo "No npm cache saved"
            ls -la ~/.bundle || echo "No Ruby gems cache saved"
            ls -la ~/shared-actions/package-lock.json || echo "No package-lock.json saved"
            ls -la ~/shared-actions/Gemfile.lock || echo "No Gemfile.lock saved"
  lint:
    executor: default-executor
    steps:
      - checkout
      - attach_workspace:
          at: ~/shared-actions
      - restore_cache:
          keys:
            - ruby-gems-{{ checksum "Gemfile.lock" }}
      - run:
          name: Install Ruby Gems
          command: |
            bundle install
      - run:
          name: Debug Cache Restoration
          command: |
            ls -la ~/.npm || echo "No npm cache restored"
            ls -la ~/.bundle || echo "No Ruby gems cache restored"
            ls -la ~/shared-actions/package-lock.json || echo "No package-lock.json saved"
            ls -la ~/shared-actions/Gemfile.lock || echo "No Gemfile.lock saved"
      - run:
          name: Run Rubocop
          command: npm run ci:lint

  security:
    executor: default-executor
    steps:
      - checkout
      - attach_workspace:
          at: ~/shared-actions
      - restore_cache:
          keys:
            - ruby-gems-{{ checksum "Gemfile.lock" }}
      - run:
          name: Install Ruby Gems
          command: |
            bundle install
      - run:
          name: Debug Cache Restoration
          command: |
            ls -la ~/.npm || echo "No npm cache restored"
            ls -la ~/.bundle || echo "No Ruby gems cache restored"
            ls -la ~/shared-actions/package-lock.json || echo "No package-lock.json saved"
            ls -la ~/shared-actions/Gemfile.lock || echo "No Gemfile.lock saved"
      - run:
          name: Run Security Checks
          command: npm run ci:security

  test:
    executor: default-executor
    steps:
      - checkout
      - attach_workspace:
          at: ~/shared-actions
      - restore_cache:
          keys:
            - npm-dependencies-{{ checksum "package-lock.json" }}
            - npm-dependencies-
      - run:
          name: Install Node.js Dependencies
          command: npm ci
      - run:
          name: Debug Node.js Environment
          command: |
            echo "Node version:"
            node --version
            echo "npm version:"
            npm --version
            echo "Installed packages:"
            ls -la node_modules/.bin
      - run:
          name: Debug Jest Installation
          command: |
            if [ -f node_modules/.bin/jest ]; then
              echo "Jest is installed!"
            else
              echo "Jest is not installed!"
              ls -la node_modules/.bin || echo "node_modules/.bin directory not found"
            fi

      - run:
          name: Run Tests
          command: npm run ci:test

workflows:
  version: 2
  ci:
    jobs:
      - setup
      - lint:
          requires:
            - setup
      - security:
          requires:
            - setup
      - test:
          requires:
            - setup
